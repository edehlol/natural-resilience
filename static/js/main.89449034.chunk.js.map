{"version":3,"sources":["features/quiz/quizSlice.js","questions.js","app/Navbar.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["quizSlice","createSlice","name","initialState","currentIndex","questions","category","subcategory","question","maxValue","value","completed","totalScore","maxTotalScore","resultsDescription","reducers","nextQuestion","state","action","length","previousQuestion","setAnswer","payload","setTotalScore","reduce","total","current","setTotalMaxScore","setResultsDescription","resetQuiz","selectCurrentQuestion","quiz","selectResultsPerCategory","results","find","result","push","subcategories","includes","filter","map","actions","Navbar","history","useHistory","bg","py","mb","maxW","justify","fontSize","color","onClick","as","GiTreeBranch","boxSize","size","Home","lazy","Quiz","Loader","App","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","quizReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89449034.chunk.js","sourcesContent":["import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { questions } from '../../questions';\n\nconst testData = [\n  {\n    category: 'Social-Economic',\n    question: 'I am useful to neighborsâ€”I make or do something they need',\n    subcategory: 'One',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    question: 'I can generate a surplus',\n    subcategory: 'One',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: 'Two',\n    question: 'I am well liked',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'psych',\n    subcategory: '3',\n    question: 'I am well liked',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'psych',\n    subcategory: '3',\n    question: 'I am well liked',\n    maxValue: 200,\n    value: null,\n  },\n];\n\nconst quizSlice = createSlice({\n  name: 'quiz',\n  initialState: {\n    currentIndex: 0,\n    questions: questions,\n    completed: false,\n    totalScore: 0,\n    maxTotalScore: 0,\n    resultsDescription: '',\n  },\n  reducers: {\n    nextQuestion(state, action) {\n      state.currentIndex++;\n      if (state.currentIndex === state.questions.length) {\n        state.completed = true;\n      }\n    },\n    previousQuestion(state, action) {\n      if (state.currentIndex > 0) {\n        state.currentIndex--;\n      }\n    },\n    setAnswer(state, action) {\n      state.questions[state.currentIndex].value =\n        action.payload * state.questions[state.currentIndex].maxValue;\n    },\n    setTotalScore(state, action) {\n      state.totalScore = state.questions.reduce((total, current) => total + current.value, 0);\n    },\n    setTotalMaxScore(state, action) {\n      state.maxTotalScore = state.questions.reduce((total, current) => total + current.maxValue, 0);\n    },\n    setResultsDescription(state, action) {\n      if (state.totalScore >= 4000) {\n        state.resultsDescription =\n          'Likely adaptable to major change, likely an asset to any community, should likely be facilitating other peopleâ€™s learning and sharing skills and resources';\n      } else if (state.totalScore >= 3000) {\n        state.resultsDescription =\n          'Probably adaptable to changing conditions, a likely asset to most communities with much to share';\n      } else if (state.totalScore >= 2000) {\n        state.resultsDescription =\n          'Adaptive patterns to work from, positioned to become highly resilient';\n      } else if (state.totalScore >= 1000) {\n        state.resultsDescription = 'Some resilient tendencies to build on';\n      } else {\n        state.resultsDescription =\n          'Average Americanâ€”a liability until major changes are undertaken';\n      }\n    },\n    resetQuiz(state, action) {\n      state.currentIndex = 0;\n      state.completed = false;\n      state.totalScore = 0;\n      state.resultsDescription = '';\n    },\n  },\n});\n\nexport const selectCurrentQuestion = (state) => state.quiz.questions[state.quiz.currentIndex];\n\n// !! TODO: refactor function\nexport const selectResultsPerCategory = (state) => {\n  let results = [];\n  // fill the array with categories\n  for (let question of state.quiz.questions) {\n    if (!results.find((result) => result.category === question.category)) {\n      results.push({ category: question.category, subcategories: [], value: null, maxValue: null });\n    }\n  }\n  // TODO: turn subcategory into object with name and score\n  // fill the categories with subcategories\n  for (let result of results) {\n    for (let question of state.quiz.questions) {\n      if (question.category === result.category) {\n        if (!result.subcategories.includes(question.subcategory)) {\n          result.subcategories.push(question.subcategory);\n        }\n      }\n    }\n  }\n  // Add score and maxscore for each category\n  for (let result of results) {\n    result.value = state.quiz.questions\n      .filter((question) => question.category === result.category)\n      .reduce((total, current) => total + current.value, 0);\n    result.maxValue = state.quiz.questions\n      .filter((question) => question.category === result.category)\n      .reduce((total, current) => total + current.maxValue, 0);\n  }\n  // convert the subcategory array into an object with name and score\n  for (let result of results) {\n    result.subcategories = result.subcategories.map((subcategory) => {\n      if (subcategory) {\n        return {\n          name: subcategory,\n          value: state.quiz.questions\n            .filter((question) => question.subcategory === subcategory)\n            .reduce((total, current) => total + current.value, 0),\n          maxValue: state.quiz.questions\n            .filter((question) => question.subcategory === subcategory)\n            .reduce((total, current) => total + current.maxValue, 0),\n        };\n      } else {\n        return null;\n      }\n    });\n  }\n  // console.log(results);\n  return results;\n};\n\nexport const {\n  nextQuestion,\n  previousQuestion,\n  setAnswer,\n  setTotalScore,\n  setResultsDescription,\n  resetQuiz,\n  setTotalMaxScore,\n} = quizSlice.actions;\n\nexport default quizSlice.reducer;\n","export const questions = [\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I am useful to neighbors - I make or do something they need',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I can generate a surplus',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I am well liked',\n    maxValue: 150,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question:\n      'I am a long-time resident of this area with many social connections and am well liked here',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question:\n      'I am financially well off, without debt, can purchase most tools or other resourced I need',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I can organize people well and/or work well within a group setting',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question:\n      'I can quickly figure out solutions to challenges I have never been trained in and enjoy doing so',\n    maxValue: 500,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Attitude',\n    question:\n      'I have a positive outlook in difficult situations and experience in adverse conditions which demand calm, calculated, effective action in the face of emergency',\n    maxValue: 150,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I do not give up when encountering difficulty',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I am patient when it comes to dealing with challenges',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I enjoy challenging situations',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I am confident, believe in myself, and act decisively and with poise',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I know what I do not know',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Mental Health',\n    question:\n      'I am in sound mental Health, stable, and happy; I enjoy my life, like to engage with others',\n    maxValue: 300,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can do everything needed to heat a home efficiently with minimal wood',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Fuel',\n    question: 'I can haul wood from woodlot to house with on-site resources',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Fuel',\n    question: 'I can process firewood with an ax',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can make and tend a fire',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can cook on a woodstove',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can clean a chimney',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can install a woodstove and chimney',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Fuel',\n    question: 'I can stack and cover wood very well',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I am able to grow vegetables, grains, fruits, nuts, pulses, and meat',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'Two-year supply each season',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'One-year supply each season',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: \"Half a year's supply each season\",\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'One-quarter of a year-s supply each season',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can lactoferment',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can dry/dehydrate',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can smoke, cure',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can slaughter and butcher',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can plant a variety of food trees properly',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can propagate trees and other plants',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can raise seedlings and transplant well',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can keep a vegetable garden in good condition all growing season',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can save seed in a vegetable garden',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can breed animals',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can lamb/kid/birth animals',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can shear, shoe, and perform various animal maintenace in general',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I can cook using local and seasonal ingredients',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I can make a variety of potent medicine',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I can identify and treat various ailments with local medicine/approaches',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question:\n      'I can treat someone for emergency/acute trauma if given the right tools, and I know how to use them (emergency medicine, including CPR)',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I am currently in good physical health',\n    maxValue: 250,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I am likely to have a long life ahead of me',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I am not addicted to any foods or drugs',\n    maxValue: 250,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question:\n      'I know how to care holistically for my particular body type and mental habits, and I have learned to maintain overall health to a high degree--I am healthy and know how to heal when sick',\n    maxValue: 150,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Electrical',\n    question: 'I know basic wiring of switches, outlets, batteries, fencing, lighting, etc.',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Electrical',\n    question: 'I know how to use a multimeter and charge vehicle batteries',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can set up a gravity-fed domestic water system without freeze problems',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can capture and store roof water',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I know irrigation systems',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can sweat copper and do basic indoor plumbing',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can work with pex tubing',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Crafting',\n    question: 'I can make some clothes and repair them',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Crafting',\n    question:\n      \"Ropework: I know basic home and farm knots and rigging--bowline clove hitch, trucker's hitch, fiserhman's knot\",\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can change a wheel',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can fix a flat tire',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can check and change oil',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can check and change other fluids',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can frame a wall efficiently',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can frame a house',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: \"I can use a full woodshop's array of tools\",\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can design, cut, and raise a timber frame',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can do concrete work: forming and pouring',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can build a proper dry-stack stonewall of 4 feet in height',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can weld',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question:\n      'I can repair and maintain buildings in general from rot, leakage, and mechanical problems',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question:\n      'I can identify 10 common medicinal plants in my immediate area and make medicine from them',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can identify 10 edible plants in my immediate area and make food from them',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can eat from and live in local wild areas for one week',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can eat from and live in local wild areas for a year',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can eat from and live in local wild areas for a warm season',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can stalk, hunt, trap effectively',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: 'I am highly aware of my surroundings',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: 'I can defend myself well from a physical threat',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: \"I don't get injured often\",\n    maxValue: 45,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: 'I am trained to help others in an emergency',\n    maxValue: 50,\n    value: null,\n  },\n];\n","import React from 'react';\nimport { GiTreeBranch } from 'react-icons/gi';\nimport { Box, Container, HStack, Link, Icon, Heading } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const history = useHistory();\n  return (\n    <Box bg=\"green.500\" py=\"4\" mb=\"8\">\n      <Container maxW=\"container.lg\">\n        <HStack justify=\"space-between\">\n          <HStack>\n            <Link\n              fontSize=\"lg\"\n              color=\"white\"\n              onClick={() => {\n                history.push('/');\n              }}\n            >\n              <HStack>\n                <Icon as={GiTreeBranch} boxSize=\"6\" />\n                <Heading size=\"md\" color=\"white\">\n                  Natural Resilience\n                </Heading>\n              </HStack>\n            </Link>\n          </HStack>\n        </HStack>\n      </Container>\n    </Box>\n  );\n};\n","import React, { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Navbar } from './app/Navbar';\nconst Home = lazy(() => import('./app/Home'));\nconst Quiz = lazy(() => import('./features/quiz/Quiz'));\n\nconst Loader = () => <p>loading</p>;\n\nconst App = () => {\n  return (\n    <>\n      <Suspense fallback={<Loader />}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/quiz\">\n            <Quiz />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport quizReducer from '../features/quiz/quizSlice';\n\nconst store = configureStore({\n  reducer: {\n    quiz: quizReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport store from './app/store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}