{"version":3,"sources":["features/quiz/quizSlice.js","questions.js","assets/house.jpg","assets/waterfall.jpg","app/Home.js","features/quiz/Question.js","features/quiz/Results.js","features/quiz/Quiz.js","app/Navbar.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["quizSlice","createSlice","name","initialState","currentIndex","questions","category","subcategory","question","maxValue","value","completed","totalScore","maxTotalScore","resultsDescription","reducers","nextQuestion","state","action","length","previousQuestion","setAnswer","payload","setTotalScore","reduce","total","current","setTotalMaxScore","setResultsDescription","resetQuiz","selectCurrentQuestion","quiz","selectResultsPerCategory","results","find","result","push","subcategories","includes","filter","map","actions","Home","dispatch","useDispatch","maxW","size","align","columns","my","spacing","src","waterfall","boxSize","objectFit","alt","as","FaCheckCircle","color","house","bg","py","mt","variant","borderColor","border","_hover","onClick","navigate","Question","useSelector","onClickAnswer","h","colorScheme","px","fontSize","Results","resultsPerCategory","useEffect","calculateResult","mb","renderedSubCategories","isNumeric","nanoid","placement","Quiz","quizLength","width","disabled","hasStripe","Math","floor","position","bottom","height","Navbar","justify","GiTreeBranch","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","quizReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d2c6cfd.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { questions } from '../../questions';\n\nconst testData = [\n  {\n    category: 'Social-Economic',\n    question: 'I am useful to neighbors—I make or do something they need',\n    subcategory: 'One',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    question: 'I can generate a surplus',\n    subcategory: 'One',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: 'Two',\n    question: 'I am well liked',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'psych',\n    subcategory: '3',\n    question: 'I am well liked',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'psych',\n    subcategory: '3',\n    question: 'I am well liked',\n    maxValue: 200,\n    value: null,\n  },\n];\n\nconst quizSlice = createSlice({\n  name: 'quiz',\n  initialState: {\n    currentIndex: 0,\n    questions: questions,\n    completed: false,\n    totalScore: 0,\n    maxTotalScore: 0,\n    resultsDescription: '',\n  },\n  reducers: {\n    nextQuestion(state, action) {\n      state.currentIndex++;\n      if (state.currentIndex === state.questions.length) {\n        state.completed = true;\n      }\n    },\n    previousQuestion(state, action) {\n      if (state.currentIndex > 0) {\n        state.currentIndex--;\n      }\n    },\n    setAnswer(state, action) {\n      state.questions[state.currentIndex].value =\n        action.payload * state.questions[state.currentIndex].maxValue;\n    },\n    setTotalScore(state, action) {\n      state.totalScore = state.questions.reduce((total, current) => total + current.value, 0);\n    },\n    setTotalMaxScore(state, action) {\n      state.maxTotalScore = state.questions.reduce((total, current) => total + current.maxValue, 0);\n    },\n    setResultsDescription(state, action) {\n      if (state.totalScore >= 4000) {\n        state.resultsDescription =\n          'Likely adaptable to major change, likely an asset to any community, should likely be facilitating other people’s learning and sharing skills and resources';\n      } else if (state.totalScore >= 3000) {\n        state.resultsDescription =\n          'Probably adaptable to changing conditions, a likely asset to most communities with much to share';\n      } else if (state.totalScore >= 2000) {\n        state.resultsDescription =\n          'Adaptive patterns to work from, positioned to become highly resilient';\n      } else if (state.totalScore >= 1000) {\n        state.resultsDescription = 'Some resilient tendencies to build on';\n      } else {\n        state.resultsDescription =\n          'Average American—a liability until major changes are undertaken';\n      }\n    },\n    resetQuiz(state, action) {\n      state.currentIndex = 0;\n      state.completed = false;\n      state.totalScore = 0;\n      state.resultsDescription = '';\n    },\n  },\n});\n\nexport const selectCurrentQuestion = (state) => state.quiz.questions[state.quiz.currentIndex];\n\n// !! TODO: refactor function\nexport const selectResultsPerCategory = (state) => {\n  let results = [];\n  // fill the array with categories\n  for (let question of state.quiz.questions) {\n    if (!results.find((result) => result.category === question.category)) {\n      results.push({ category: question.category, subcategories: [], value: null, maxValue: null });\n    }\n  }\n  // TODO: turn subcategory into object with name and score\n  // fill the categories with subcategories\n  for (let result of results) {\n    for (let question of state.quiz.questions) {\n      if (question.category === result.category) {\n        if (!result.subcategories.includes(question.subcategory)) {\n          result.subcategories.push(question.subcategory);\n        }\n      }\n    }\n  }\n  // Add score and maxscore for each category\n  for (let result of results) {\n    result.value = state.quiz.questions\n      .filter((question) => question.category === result.category)\n      .reduce((total, current) => total + current.value, 0);\n    result.maxValue = state.quiz.questions\n      .filter((question) => question.category === result.category)\n      .reduce((total, current) => total + current.maxValue, 0);\n  }\n  // convert the subcategory array into an object with name and score\n  for (let result of results) {\n    result.subcategories = result.subcategories.map((subcategory) => {\n      if (subcategory) {\n        return {\n          name: subcategory,\n          value: state.quiz.questions\n            .filter((question) => question.subcategory === subcategory)\n            .reduce((total, current) => total + current.value, 0),\n          maxValue: state.quiz.questions\n            .filter((question) => question.subcategory === subcategory)\n            .reduce((total, current) => total + current.maxValue, 0),\n        };\n      } else {\n        return null;\n      }\n    });\n  }\n  // console.log(results);\n  return results;\n};\n\nexport const {\n  nextQuestion,\n  previousQuestion,\n  setAnswer,\n  setTotalScore,\n  setResultsDescription,\n  resetQuiz,\n  setTotalMaxScore,\n} = quizSlice.actions;\n\nexport default quizSlice.reducer;\n","export const questions = [\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I am useful to neighbors - I make or do something they need',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I can generate a surplus',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I am well liked',\n    maxValue: 150,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question:\n      'I am a long-time resident of this area with many social connections and am well liked here',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question:\n      'I am financially well off, without debt, can purchase most tools or other resourced I need',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Social-Economic',\n    subcategory: null,\n    question: 'I can organize people well and/or work well within a group setting',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question:\n      'I can quickly figure out solutions to challenges I have never been trained in and enjoy doing so',\n    maxValue: 500,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Attitude',\n    question:\n      'I have a positive outlook in difficult situations and experience in adverse conditions which demand calm, calculated, effective action in the face of emergency',\n    maxValue: 150,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I do not give up when encountering difficulty',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I am patient when it comes to dealing with challenges',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I enjoy challenging situations',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I am confident, believe in myself, and act decisively and with poise',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Aptitude',\n    question: 'I know what I do not know',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Personal and Psychological',\n    subcategory: 'Mental Health',\n    question:\n      'I am in sound mental Health, stable, and happy; I enjoy my life, like to engage with others',\n    maxValue: 300,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can do everything needed to heat a home efficiently with minimal wood',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Fuel',\n    question: 'I can haul wood from woodlot to house with on-site resources',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Fuel',\n    question: 'I can process firewood with an ax',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can make and tend a fire',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can cook on a woodstove',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can clean a chimney',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Heat',\n    question: 'I can install a woodstove and chimney',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Fuel',\n    question: 'I can stack and cover wood very well',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I am able to grow vegetables, grains, fruits, nuts, pulses, and meat',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'Two-year supply each season',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'One-year supply each season',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: \"Half a year's supply each season\",\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'One-quarter of a year-s supply each season',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can lactoferment',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can dry/dehydrate',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can smoke, cure',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can slaughter and butcher',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can plant a variety of food trees properly',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can propagate trees and other plants',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can raise seedlings and transplant well',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can keep a vegetable garden in good condition all growing season',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can save seed in a vegetable garden',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can breed animals',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can lamb/kid/birth animals',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Food, Fuel and Heat',\n    subcategory: 'Food',\n    question: 'I can shear, shoe, and perform various animal maintenace in general',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I can cook using local and seasonal ingredients',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I can make a variety of potent medicine',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I can identify and treat various ailments with local medicine/approaches',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question:\n      'I can treat someone for emergency/acute trauma if given the right tools, and I know how to use them (emergency medicine, including CPR)',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I am currently in good physical health',\n    maxValue: 250,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I am likely to have a long life ahead of me',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question: 'I am not addicted to any foods or drugs',\n    maxValue: 250,\n    value: null,\n  },\n  {\n    category: 'Physical Health',\n    subcategory: null,\n    question:\n      'I know how to care holistically for my particular body type and mental habits, and I have learned to maintain overall health to a high degree--I am healthy and know how to heal when sick',\n    maxValue: 150,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Electrical',\n    question: 'I know basic wiring of switches, outlets, batteries, fencing, lighting, etc.',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Electrical',\n    question: 'I know how to use a multimeter and charge vehicle batteries',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can set up a gravity-fed domestic water system without freeze problems',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can capture and store roof water',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I know irrigation systems',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can sweat copper and do basic indoor plumbing',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Plumbing',\n    question: 'I can work with pex tubing',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Crafting',\n    question: 'I can make some clothes and repair them',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Crafting',\n    question:\n      \"Ropework: I know basic home and farm knots and rigging--bowline clove hitch, trucker's hitch, fiserhman's knot\",\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can change a wheel',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can fix a flat tire',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can check and change oil',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Vehicles',\n    question: 'I can check and change other fluids',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can frame a wall efficiently',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can frame a house',\n    maxValue: 20,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: \"I can use a full woodshop's array of tools\",\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can design, cut, and raise a timber frame',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can do concrete work: forming and pouring',\n    maxValue: 10,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can build a proper dry-stack stonewall of 4 feet in height',\n    maxValue: 15,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question: 'I can weld',\n    maxValue: 5,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Construction',\n    question:\n      'I can repair and maintain buildings in general from rot, leakage, and mechanical problems',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question:\n      'I can identify 10 common medicinal plants in my immediate area and make medicine from them',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can identify 10 edible plants in my immediate area and make food from them',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can eat from and live in local wild areas for one week',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can eat from and live in local wild areas for a year',\n    maxValue: 100,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can eat from and live in local wild areas for a warm season',\n    maxValue: 25,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Ecological Awareness and Literacy',\n    question: 'I can stalk, hunt, trap effectively',\n    maxValue: 30,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: 'I am highly aware of my surroundings',\n    maxValue: 200,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: 'I can defend myself well from a physical threat',\n    maxValue: 50,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: \"I don't get injured often\",\n    maxValue: 45,\n    value: null,\n  },\n  {\n    category: 'Various Skills',\n    subcategory: 'Safety',\n    question: 'I am trained to help others in an emergency',\n    maxValue: 50,\n    value: null,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/house.e71f579d.jpg\";","export default __webpack_public_path__ + \"static/media/waterfall.8f74d9bf.jpg\";","import {\n  Box,\n  Button,\n  Center,\n  Container,\n  Heading,\n  Image,\n  List,\n  ListIcon,\n  ListItem,\n  SimpleGrid,\n  Text,\n} from '@chakra-ui/react';\nimport { navigate } from '@reach/router';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetQuiz } from '../features/quiz/quizSlice';\nimport house from '../assets/house.jpg';\nimport waterfall from '../assets/waterfall.jpg';\nimport { FaCheckCircle } from 'react-icons/fa';\n\nexport const Home = () => {\n  const dispatch = useDispatch();\n  const onBtnClick = () => {\n    dispatch(resetQuiz());\n    navigate('/quiz');\n  };\n  return (\n    <>\n      <Container maxW=\"container.lg\">\n        <Center>\n          <Heading size=\"lg\" align=\"center\">\n            The Resilience Aptitude Assessment Test\n          </Heading>\n        </Center>\n\n        <SimpleGrid columns={[1, 1, 2]} my=\"12\" spacing=\"8\">\n          <Image src={waterfall} boxSize=\"md\" objectFit=\"cover\" alt=\"waterfall scenery\" />\n          <Box>\n            <Text>\n              Assessment is always an important, albeit imperfect, subjective, and incomplete tool.\n              In order to understand one’s skill in living a resilient lifestyle, we have developed\n              the following assessment tool. This test is useful in identifying strong points—where\n              one can help others most directly, and weak areas—where the lowest hanging fruit is.\n              Developing skills as rapidly and thoroughly as possible requires that we focus on the\n              weakest links in ourselves, which raises the function of the whole system most easily.\n              Since we only have so much time and energy, being strategic with these precious\n              resources is key.\n            </Text>\n            <br />\n            <Text>\n              The results of the test below should not be taken literally but as an indicator of\n              patterns. As you go through the test, notice in what areas you are strongest and in\n              what areas you are weakest. Think about how these strengths can help others around\n              you. How can you share them? In what areas do you need someone else to learn from?\n            </Text>\n          </Box>\n        </SimpleGrid>\n        <SimpleGrid columns={[1, 1, 2]} my=\"12\" spacing=\"8\">\n          <Box>\n            <Text>\n              As with all tests, the breadth and depth of what can be measured by this evaluation is\n              very limited. The point of this “test” is to help you identify areas in which you have\n              sound skills and those areas that would be most strategic to work on. Scoring your\n              evaluation should be done in the following manner:\n            </Text>\n            <br />\n            <List>\n              <ListItem>\n                <ListIcon as={FaCheckCircle} color=\"green.500\" />\n                Read the question, and think about how competent you are at the skill described.\n              </ListItem>\n              <br />\n              <ListItem>\n                <ListIcon as={FaCheckCircle} color=\"green.500\" />\n                Mark a number corresponding with that competence. This gets subjective, but do your\n                best. For instance, for the question of “Can you weld?” If you could probably cob\n                together a poor weld because you’ve tried it once, choose 'Mostly Untrue' or\n                'Moderately'. If you can do a satisfactory job with basic welding tools, choose\n                \"Mostly True\". If you can weld with an array of welding equipment very well, choose\n                \"True\".\n              </ListItem>\n            </List>\n          </Box>\n\n          <Image src={house} boxSize=\"md\" objectFit=\"cover\" alt=\"waterfall scenery\" />\n        </SimpleGrid>\n      </Container>\n\n      <Center bg=\"green.500\">\n        <Box align=\"center\" py=\"12\">\n          <Heading size=\"lg\" color=\"white\">\n            Take the Aptitude Test\n          </Heading>\n          <Button\n            mt=\"12\"\n            variant=\"outline\"\n            borderColor=\"white\"\n            color=\"white\"\n            border=\"2px\"\n            size=\"lg\"\n            _hover={{ bg: 'green.600' }}\n            onClick={onBtnClick}\n          >\n            Start Test\n          </Button>\n        </Box>\n      </Center>\n    </>\n  );\n};\n","import React from 'react';\nimport { Stack, Button, Center, Tag, Text, Box, Heading } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nextQuestion, setAnswer, selectCurrentQuestion } from './quizSlice';\n\nexport const Question = () => {\n  const dispatch = useDispatch();\n  const question = useSelector(selectCurrentQuestion);\n\n  const onClickAnswer = (value) => {\n    dispatch(setAnswer(value));\n    dispatch(nextQuestion());\n  };\n\n  if (!question) {\n    return <></>;\n  }\n  return (\n    <Box my=\"8\" align=\"center\">\n      <Box h=\"16\">\n        <Heading size=\"md\">{question.category}</Heading>\n        <Center>\n          {question.subcategory && (\n            <Tag colorScheme=\"green\" variant=\"solid\" px=\"2\">\n              {question.subcategory}\n            </Tag>\n          )}\n        </Center>\n      </Box>\n\n      <Center h={32} my=\"4\">\n        <Text fontSize=\"lg\" align=\"left\">\n          {question.question}\n        </Text>\n      </Center>\n\n      <Stack>\n        <Button variant=\"outline\" colorScheme=\"red\" onClick={() => onClickAnswer(0)}>\n          Untrue\n        </Button>\n        <Button variant=\"outline\" colorScheme=\"orange\" onClick={() => onClickAnswer(0.25)}>\n          Mostly Untrue\n        </Button>\n        <Button variant=\"outline\" colorScheme=\"gray\" onClick={() => onClickAnswer(0.5)}>\n          Moderately\n        </Button>\n        <Button variant=\"outline\" colorScheme=\"teal\" onClick={() => onClickAnswer(0.75)}>\n          Mostly True\n        </Button>\n        <Button variant=\"outline\" colorScheme=\"green\" onClick={() => onClickAnswer(1)}>\n          True\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setTotalScore,\n  selectResultsPerCategory,\n  setResultsDescription,\n  setTotalMaxScore,\n} from './quizSlice';\nimport {\n  Table,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  Container,\n  Heading,\n  Text,\n  TableCaption,\n} from '@chakra-ui/react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const Results = () => {\n  const dispatch = useDispatch();\n  const totalScore = useSelector((state) => state.quiz.totalScore);\n  const maxTotalScore = useSelector((state) => state.quiz.maxTotalScore);\n  const resultsPerCategory = useSelector(selectResultsPerCategory);\n  const resultsDescription = useSelector((state) => state.quiz.resultsDescription);\n  useEffect(() => {\n    dispatch(setTotalScore());\n    dispatch(setTotalMaxScore());\n    dispatch(setResultsDescription());\n  }, [dispatch]);\n\n  const calculateResult = (value, maxValue) => {\n    const result = (value / maxValue) * 100;\n    switch (true) {\n      case result >= 95:\n        return 'A+';\n      case result >= 90:\n        return 'A';\n      case result >= 85:\n        return 'A-';\n      case result >= 80:\n        return 'B+';\n      case result >= 75:\n        return 'B';\n      case result >= 70:\n        return 'B-';\n      case result >= 65:\n        return 'C+';\n      case result >= 60:\n        return 'C';\n      case result >= 55:\n        return 'C-';\n      case result >= 50:\n        return 'D+';\n      case result >= 45:\n        return 'D';\n      case result >= 40:\n        return 'D-';\n      case result < 35:\n        return 'F';\n      default:\n        return '';\n    }\n  };\n\n  const renderResults = () => {\n    const results = resultsPerCategory.map((result) => {\n      const renderedSubCategories = result.subcategories.map(\n        (subcategory) =>\n          subcategory && (\n            <Tr key={nanoid()}>\n              <Td>{subcategory.name}</Td>\n              <Td isNumeric>{calculateResult(subcategory.value, subcategory.maxValue)}</Td>\n            </Tr>\n          )\n      );\n      return (\n        <Table key={nanoid()} mb=\"16\">\n          <TableCaption fontSize=\"xl\" placement=\"top\">\n            {result.category}\n          </TableCaption>\n          <Thead>\n            {result.subcategories[0] !== null && (\n              <Tr>\n                <Th>Subcategory</Th>\n                <Th isNumeric>Score</Th>\n              </Tr>\n            )}\n          </Thead>\n          <Tbody>\n            {renderedSubCategories}\n            <Tr bg=\"gray.300\">\n              <Td>\n                <b>Score</b>\n              </Td>\n              <Td isNumeric>\n                <b>{calculateResult(result.value, result.maxValue)}</b>\n              </Td>\n            </Tr>\n          </Tbody>\n        </Table>\n      );\n    });\n    return results;\n  };\n  return (\n    <Container>\n      <Text align=\"center\" mb=\"4\" fontSize=\"lg\">\n        Your results:\n      </Text>\n      {renderResults()}\n\n      <Text align=\"center\" fontSize=\"lg\">\n        Total Score:{' '}\n      </Text>\n      <Heading mb=\"4\" align=\"center\" size=\"3xl\">\n        {calculateResult(totalScore, maxTotalScore)}\n      </Heading>\n      <Heading size=\"md\" align=\"center\" mb=\"8\">\n        {resultsDescription}\n      </Heading>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Question } from './Question';\nimport { Results } from './Results';\nimport { previousQuestion } from './quizSlice';\nimport { Container, Button, Divider, Center, Progress } from '@chakra-ui/react';\n\nexport const Quiz = () => {\n  const dispatch = useDispatch();\n  const completed = useSelector((state) => state.quiz.completed);\n  const quizLength = useSelector((state) => state.quiz.questions.length);\n  const currentIndex = useSelector((state) => state.quiz.currentIndex);\n\n  if (completed) {\n    return <Results />;\n  } else {\n    return (\n      <>\n        <Container>\n          <Question />\n          <Divider my={6} />\n          <Center mb=\"12\">\n            <Button\n              colorScheme=\"blackAlpha\"\n              width={64}\n              disabled={currentIndex === 0 ? true : false}\n              onClick={() => dispatch(previousQuestion())}\n            >\n              Back\n            </Button>\n          </Center>\n        </Container>\n\n        <Progress\n          hasStripe\n          colorScheme=\"green\"\n          value={Math.floor((currentIndex / quizLength) * 100)}\n          position=\"fixed\"\n          bottom=\"0\"\n          width=\"100%\"\n          height=\"6\"\n        />\n      </>\n    );\n  }\n};\n","import React from 'react';\nimport { GiTreeBranch } from 'react-icons/gi';\nimport { Box, Container, HStack, Link, Icon, Heading } from '@chakra-ui/react';\nimport { navigate } from '@reach/router';\n\nexport const Navbar = () => {\n  return (\n    <Box bg=\"green.500\" py=\"4\" mb=\"8\">\n      <Container maxW=\"container.lg\">\n        <HStack justify=\"space-between\">\n          <HStack>\n            <Link\n              fontSize=\"lg\"\n              color=\"white\"\n              onClick={() => {\n                navigate('/');\n              }}\n            >\n              <HStack>\n                <Icon as={GiTreeBranch} boxSize=\"6\" />\n                <Heading size=\"md\" color=\"white\">\n                  Natural Resilience\n                </Heading>\n              </HStack>\n            </Link>\n          </HStack>\n        </HStack>\n      </Container>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Home } from './app/Home';\nimport { Quiz } from './features/quiz/Quiz';\nimport { Router } from '@reach/router';\nimport { Navbar } from './app/Navbar';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Router>\n        <Home path=\"/\" />\n        <Quiz path=\"/quiz\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport quizReducer from '../features/quiz/quizSlice';\n\nconst store = configureStore({\n  reducer: {\n    quiz: quizReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}